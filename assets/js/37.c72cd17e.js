(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{532:function(e,a,s){"use strict";s.r(a);var t=s(4),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("ol",[s("li",[e._v("babel 介绍")]),e._v(" "),s("li",[e._v("babel 插件集合")]),e._v(" "),s("li",[e._v("babel 配套工具")]),e._v(" "),s("li",[e._v("babel 7.x")])])]),e._v(" "),s("p",[e._v("摘录自"),s("a",{attrs:{href:"https://juejin.im/post/5c19c5e0e51d4502a232c1c6",target:"_blank",rel:"noopener noreferrer"}},[e._v("一口(很长的)气了解 babel"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),s("p",[e._v("把 JavaScript 中 es201x 的新语法转化为 es5，让低端运行环境(如浏览器和 node )能够认识并执行。")]),e._v(" "),s("h2",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[e._v("#")]),e._v(" 使用方式")]),e._v(" "),s("blockquote",[s("p",[e._v("只有入口不同而已，调用的 babel 内核，处理方式都是一样的")])]),e._v(" "),s("ol",[s("li",[e._v("使用单体文件 (standalone script)")]),e._v(" "),s("li",[e._v("命令行 (cli)：多见于 "),s("code",[e._v("package.json")]),e._v(" 中的 "),s("code",[e._v("scripts")]),e._v(" 段落中的某条命令")]),e._v(" "),s("li",[e._v("构建工具的插件 (webpack 的 "),s("code",[e._v("babel-loader")]),e._v(", rollup 的 "),s("code",[e._v("rollup-plugin-babel")]),e._v(")：直接集成到构建工具")])]),e._v(" "),s("h2",{attrs:{id:"运行方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行方式"}},[e._v("#")]),e._v(" 运行方式")]),e._v(" "),s("p",[e._v("babel 总共分为三个阶段：解析，转换，生成。")]),e._v(" "),s("p",[e._v("babel 本身不具有任何转化功能，它把转化的功能都分解到一个个 plugin 里面。因此当我们不配置任何插件时，经过 babel 的代码和输入是相同的。")]),e._v(" "),s("h2",{attrs:{id:"插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[e._v("#")]),e._v(" 插件")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("语法插件")]),e._v(": 添加后在解析时 babel 能解析更多语法 （ babel 内部使用的解析类库叫 babylon， 非 babel 自行开发）")]),e._v(" "),s("li",[s("strong",[e._v("转译插件")]),e._v(": 在转换时把源码转换并输出，如 "),s("code",[e._v("(a) => a")]),e._v(" 转换为 "),s("code",[e._v("function(a) { return a }")])])]),e._v(" "),s("p",[e._v("同一类语法可能同时存在语法插件和转译插件两个版本，"),s("strong",[e._v("如果使用了转译插件，就不用再使用语法插件了。")])]),e._v(" "),s("h2",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[e._v("#")]),e._v(" 配置文件")]),e._v(" "),s("p",[e._v("将插件的名字增加到配置文件中 (根目录下的 "),s("code",[e._v(".babelrc")]),e._v(" 或者 "),s("code",[e._v("package.json")]),e._v(" 的 babel)。")]),e._v(" "),s("h2",{attrs:{id:"preset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preset"}},[e._v("#")]),e._v(" preset")]),e._v(" "),s("blockquote",[s("p",[e._v("插件集合")])]),e._v(" "),s("p",[e._v("分为:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("官方内容，"),s("code",[e._v("env")]),e._v("，"),s("code",[e._v("react")]),e._v("，"),s("code",[e._v("flow")]),e._v("，"),s("code",[e._v("minify")]),e._v(" 等。")])]),e._v(" "),s("li",[s("p",[e._v("stage-x，最新规范的草案：")]),e._v(" "),s("ul",[s("li",[e._v("stage-0 - 稻草人：只是一个提案")]),e._v(" "),s("li",[e._v("stage-1 - 提案：初步尝试")]),e._v(" "),s("li",[e._v("stage-2 - 初稿：初步规范")]),e._v(" "),s("li",[e._v("stage-3 - 候选：完成规范和浏览器初步实现")]),e._v(" "),s("li",[e._v("stage-4 - 完成：将被添加到下一年度发布")])])])]),e._v(" "),s("blockquote",[s("p",[e._v("低一级的 stage 会包含所有高级 stage 内容，stage - 1 会包含 stage-2，stage-3 的所有内容")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("es201x, latest")])]),e._v(" "),s("blockquote",[s("p",[e._v("已经纳入到标准规范的语法。")])]),e._v(" "),s("p",[e._v("因为 "),s("code",[e._v("env")]),e._v(" 的出现，es2016 和 es2017 已经废弃。经常可以看到 es2015。\nlatest 是 "),s("code",[e._v("env")]),e._v(" 的雏形，每年更新的 preset，目的是包含所有 es201x，因为 "),s("code",[e._v("env")]),e._v(" 的出现，已经废弃。")]),e._v(" "),s("h2",{attrs:{id:"执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[e._v("#")]),e._v(" 执行顺序")]),e._v(" "),s("ol",[s("li",[e._v("plugin 会运行在 preset 之前")]),e._v(" "),s("li",[e._v("plugin 从前到后执行")]),e._v(" "),s("li",[e._v("preset 从后到前执行 (保证向后兼容)")])]),e._v(" "),s("h2",{attrs:{id:"env-非常重要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env-非常重要"}},[e._v("#")]),e._v(" env (非常重要！！！)")]),e._v(" "),s("p",[e._v("核心目的是通过配置得知目标环境的特点，然后只做必要的转换。如果目标浏览器支持 es2015，那么 es2015 的 preset 就不需要了。")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"targets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"browsers"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"last 2 versions"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"safari >= 7"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("如果不写 env 配置项，env = latest = es2015 + es2016 + es2017 (不包含 stage-x)。")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("env 包含的插件列表"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/browserslist/browserslist",target:"_blank",rel:"noopener noreferrer"}},[e._v("browserslist"),s("OutboundLink")],1)])]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"targets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"node"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"9.8"')]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("将目标设为 nodejs 并支持 9.8 及以上版本。也可以使用 "),s("code",[e._v("node: 'current'")]),e._v(" 来支持最新稳定版本。")]),e._v(" "),s("p",[e._v("还有一个 "),s("code",[e._v("modules")]),e._v(" 配置项，可选值有 "),s("code",[e._v("amd")]),e._v(", "),s("code",[e._v("umd")]),e._v(", "),s("code",[e._v("systemjs")]),e._v(", "),s("code",[e._v("commonjs")]),e._v(" 和 "),s("code",[e._v("false")]),e._v("。可以让 babel 以特定的模块化格式来输出代码。如果选择 "),s("code",[e._v("false")]),e._v(" 就不进行模块化处理。")]),e._v(" "),s("h2",{attrs:{id:"配套工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配套工具"}},[e._v("#")]),e._v(" 配套工具")]),e._v(" "),s("h3",{attrs:{id:"babel-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-cli"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-cli")])]),e._v(" "),s("p",[e._v("cli 就是命令行工具。允许命令行使用 babel 命令转译文件。")]),e._v(" "),s("h3",{attrs:{id:"babel-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-node"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-node")])]),e._v(" "),s("p",[e._v("随 "),s("code",[e._v("babel-cli")]),e._v(" 一起安装\n允许命令行使用 "),s("code",[e._v("babel-node")]),e._v(" 直接转译+执行 node 文件\n"),s("code",[e._v("babel-node = babel-polyfill + babel-register")])]),e._v(" "),s("h3",{attrs:{id:"babel-register"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-register"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-register")])]),e._v(" "),s("p",[s("code",[e._v("babel-register")]),e._v(" 模块改写 require 命令，为它加上一个钩子。此后，每当使用 require 加载 .js、.jsx、.es 和 .es6 后缀名的文件，就会先用 babel 进行转码。\n需要注意的是，babel-register 只会对 require 命令加载的文件转码，而"),s("strong",[e._v("不会对当前文件转码。")]),e._v("\n另外，由于它是实时转码，所以"),s("strong",[e._v("只适用于开发环境。")])]),e._v(" "),s("h3",{attrs:{id:"babel-polyfill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-polyfill")])]),e._v(" "),s("p",[s("strong",[e._v("为所有 API 增加兼容方法")])]),e._v(" "),s("p",[e._v("babel 默认只转换 js 语法，而不转换新的 API，比如 Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法(比如 "),s("code",[e._v("Object.assign")]),e._v(")都不会转码。")]),e._v(" "),s("p",[e._v("使用时，在所有代码运行之前增加 "),s("code",[e._v("require('babel-polyfill')")]),e._v("。或者更常规的操作是在 "),s("code",[e._v("webpack.config.js")]),e._v(" 中将 "),s("code",[e._v("babel-polyfill")]),e._v(" 作为第一个 entry。因此必须把 "),s("code",[e._v("babel-polyfill")]),e._v(" 作为 "),s("code",[e._v("dependencies")]),e._v(" 而不是 "),s("code",[e._v("devDependencies")]),e._v("。")]),e._v(" "),s("p",[s("code",[e._v("babel-polyfill")]),e._v(" 主要有两个缺点：")]),e._v(" "),s("ul",[s("li",[e._v("使用 "),s("code",[e._v("babel-polyfill")]),e._v(" 会导致打出来的包非常大，因为 "),s("code",[e._v("babel-polyfill")]),e._v(" 是一个整体，把所有方法都加到原型链上。比如我们只使用了 "),s("code",[e._v("Array.from")]),e._v("，但它把 "),s("code",[e._v("Object.defineProperty")]),e._v(" 也给加上了，这就是一种浪费了。这个问题可以通过单独使用 "),s("code",[e._v("core-js")]),e._v(" 的某个类库来解决，"),s("code",[e._v("core-js")]),e._v(" 都是分开的。")]),e._v(" "),s("li",[s("code",[e._v("babel-polyfill")]),e._v(" 会污染全局变量，给很多类的原型链上都作了修改，如果我们开发的也是一个类库供其他开发者使用，这种情况就会变得非常不可控。")])]),e._v(" "),s("p",[e._v("因此在实际使用中，如果我们无法忍受这两个缺点(尤其是第二个)，通常我们会倾向于使用 "),s("code",[e._v("babel-plugin-transform-runtime")]),e._v("。\n但如果代码中包含高版本 js 中类型的实例方法 (例如 "),s("code",[e._v("[1,2,3].includes(1)")]),e._v(")，这还是要使用 "),s("code",[e._v("babel-polyfill")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"babel-runtime-和-babel-plugin-transform-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-runtime-和-babel-plugin-transform-runtime"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-runtime")]),e._v(" 和 "),s("code",[e._v("babel-plugin-transform-runtime")])]),e._v(" "),s("p",[e._v("babel 会转换 js 语法，之前已经提过了。\n以 async/await 举例，如果不使用这个 plugin (即默认情况)，转换后的代码大概是：")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// babel 添加一个方法，把 async 转化为 generator，会在使用的地方都定义一次，导致重复和浪费")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("_asyncToGenerator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 使用这个方法替换 async")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" _ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("_asyncToGenerator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("yield")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" something"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("在使用了 "),s("code",[e._v("babel-plugin-transform-runtime")]),e._v(" 了之后，转化后的代码会变成")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 从直接定义改为引用，这样就不会重复定义了。")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" _asyncToGenerator2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'babel-runtime/helpers/asyncToGenerator'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" _asyncToGenerator3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("_interopRequireDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_asyncToGenerator2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 使用方式相同")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("上面的 require 里面出现了 "),s("code",[e._v("babel-runtime")]),e._v("，它就是这些方法的集合处，也因此，在使用 "),s("code",[e._v("babel-plugin-transform-runtime")]),e._v(" 的时候。"),s("code",[e._v("babel-runtime")]),e._v(" 需要安装为依赖，而不是开发依赖。")]),e._v(" "),s("p",[s("code",[e._v("babel-runtime")]),e._v("，内部集成了:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("core-js")]),e._v(": 转换一些内置类(Promise, Symbols 等)和静态方法("),s("code",[e._v("Array.from")]),e._v("等)。自动引入。")]),e._v(" "),s("li",[s("code",[e._v("regenerator")]),e._v(": 作为 "),s("code",[e._v("core-js")]),e._v(" 的补漏，主要是支持 generator/yield 和 async/await ，代码中有使用时自动引入。")]),e._v(" "),s("li",[e._v("helpers， 可以查看"),s("a",{attrs:{href:"https://github.com/babel/babel/blob/6.x/packages/babel-helpers/src/helpers.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel-helper"),s("OutboundLink")],1),e._v("， 上面的 "),s("code",[e._v("asyncToGenerator")]),e._v(" 是其中之一，其他还有 "),s("code",[e._v("jsx")]),e._v(", "),s("code",[e._v("classCallCheck")]),e._v(" 等，在代码中有内置的 helpers 使用时(如上面的第一段代码)移除定义，并插入引用(于是就变成了第二段代码)。")])]),e._v(" "),s("p",[s("code",[e._v("babel-plugin-transform-runtime")]),e._v(" "),s("strong",[e._v("不支持")]),e._v("实例方法 (例如 "),s("code",[e._v("[1,2,3].includes(1)")]),e._v(")。")]),e._v(" "),s("h3",{attrs:{id:"babel-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-loader"}},[e._v("#")]),e._v(" babel-loader")]),e._v(" "),s("p",[e._v("一些大型的项目都会有构建工具 (如 webpack 或 rollup) 来进行代码构建和压缩 (uglify)，为了在 uglify 之前进行 babel 处理，webpack 有 loader 的概念，就有了 "),s("code",[e._v("babel-loader")]),e._v("。")]),e._v(" "),s("p",[e._v("和 "),s("code",[e._v("babel-cli")]),e._v(" 一样， "),s("code",[e._v("babel-loader")]),e._v(" 也会读取 "),s("code",[e._v(".babelrc")]),e._v(" 或者 "),s("code",[e._v("package.json")]),e._v(" 中的 babel 段作为自己的配置，但他需要和 webpack 交互，因此需要在 webpack 这边进行配置。")]),e._v(" "),s("h2",{attrs:{id:"babel-7-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-7-x"}},[e._v("#")]),e._v(" Babel 7.x")]),e._v(" "),s("blockquote",[s("p",[e._v("上面部分都是针对 6.x，下面是 7.x 带来的变化")])]),e._v(" "),s("h3",{attrs:{id:"preset-的变更-淘汰-非删除-不推荐使用-es201x-删除-stage-x-强推-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preset-的变更-淘汰-非删除-不推荐使用-es201x-删除-stage-x-强推-env"}},[e._v("#")]),e._v(" preset 的变更：淘汰(非删除，不推荐使用) es201x，删除 stage-x，强推 env")]),e._v(" "),s("p",[s("strong",[e._v("凡是使用 es201x 的开发者，都应当使用 env 进行替换")])]),e._v(" "),s("p",[e._v("stage-x 被删了，但它包含的插件并没有被删除，依然可以显式地声明这些"),s("a",{attrs:{href:"https://github.com/babel/babel/tree/master/packages/babel-preset-stage-0#babelpreset-stage-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("插件"),s("OutboundLink")],1),e._v("来获得等价的效果")]),e._v(" "),s("p",[s("strong",[e._v("npm package 名称变化 ！！！")])]),e._v(" "),s("p",[e._v("将 "),s("code",[e._v("babel-x")]),e._v(" 重命名为 "),s("code",[e._v("@babel/x")]),e._v("。")]),e._v(" "),s("p",[s("code",[e._v("babel-preset-env")]),e._v(" => "),s("code",[e._v("@babel/preset-env")]),e._v(" 等于 "),s("code",[e._v("@babel/env")]),e._v("。")]),e._v(" "),s("p",[s("code",[e._v("babel-plugin-transform-arrow-function")]),e._v(" =>"),s("code",[e._v("@babel/plugin-transform-arrow-functions")]),e._v(" 等于 "),s("code",[e._v("@babel/transform-arrow-functions")]),e._v("。")]),e._v(" "),s("p",[e._v("babel 解析语法的内核 "),s("code",[e._v("babylon")]),e._v(" 重命名为 "),s("code",[e._v("@babel/parser")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"不再支持低版本-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不再支持低版本-node"}},[e._v("#")]),e._v(" 不再支持低版本 node")]),e._v(" "),s("p",[e._v("不再支持 0.10，0.12，4，5 四个版本，相当于要求 "),s("code",[e._v("nodejs >= 6")]),e._v("，在这些低版本环境中不能使用 babel 转译代码，但转译后的代码依然能在这些环境上运行。")]),e._v(" "),s("h3",{attrs:{id:"only-和-ignore-匹配规则的变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#only-和-ignore-匹配规则的变化"}},[e._v("#")]),e._v(" only 和 ignore 匹配规则的变化")]),e._v(" "),s("p",[e._v("babel 6 时，ignore 选项包含 "),s("code",[e._v("*.foo.js")]),e._v(" 会转换为包括子目录的 "),s("code",[e._v("./**/*.foo.js")]),e._v("。")]),e._v(" "),s("p",[e._v("babel 7 时，"),s("code",[e._v("*.foo.js")]),e._v(" 只作用于当前目录，不作用于子目录。")]),e._v(" "),s("p",[e._v("only 同理")]),e._v(" "),s("h3",{attrs:{id:"babel-node-从-babel-cli-中独立了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-node-从-babel-cli-中独立了"}},[e._v("#")]),e._v(" @babel/node 从 @babel/cli 中独立了")]),e._v(" "),s("h3",{attrs:{id:"babel-upgrade-工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-upgrade-工具"}},[e._v("#")]),e._v(" "),s("code",[e._v("babel-upgrade")]),e._v(" 工具")]),e._v(" "),s("p",[e._v("目的时帮助用户自动化从 babel 6 升级到 7")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("package.json")])])]),e._v(" "),s("ul",[s("li",[e._v("将 "),s("code",[e._v("babel-x")]),e._v(" 替换为 "),s("code",[e._v("@babel/x")])]),e._v(" "),s("li",[e._v("把 "),s("code",[e._v("@babel/x")]),e._v(" 依赖的版本更新为最新版")]),e._v(" "),s("li",[e._v("如果 scripts 中有 "),s("code",[e._v("babel-node")]),e._v("，自动添加 "),s("code",[e._v("@babel/node")]),e._v(" 为开发依赖")]),e._v(" "),s("li",[e._v("如果有 babel 配置，检查其中的 plugins 和 presets，把短名("),s("code",[e._v("env")]),e._v(") 替换为 ("),s("code",[e._v("@babel/preset-env")]),e._v(")")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[e._v(".babelrc")])])]),e._v(" "),s("ul",[s("li",[e._v("检查其中的 plugins 和 presets，把短名("),s("code",[e._v("env")]),e._v(") 替换为 ("),s("code",[e._v("@babel/preset-env")]),e._v(")")]),e._v(" "),s("li",[e._v("检查是否包含 "),s("code",[e._v("preset-stage-x")]),e._v("， 如有替换为对应的插件并添加到 plugins")])]),e._v(" "),s("p",[e._v("使用方式")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("// 不安装到本地而是直接运行命令\nnpx babel-upgrade --write\n\n// 或者\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i babel-upgrade -g\nbabel-upgrade --write\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);