(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{526:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("网上关于"),a("code",[s._v("ESLint")]),s._v("的介绍，安装，配置和使用等文章已经有很多了，写的都很全面，还不清楚的同学可以先去简单了解一下，本文就不作介绍了。")]),s._v(" "),a("p",[s._v("本文的主要内容是通过"),a("code",[s._v("ESLint")]),s._v("的规则（"),a("code",[s._v("Rules")]),s._v("），从中学到 "),a("code",[s._v("JavaScript")]),s._v(" 的基础知识。同时，提前了解这些规则的含义与理由，有助于在以后的开发中提前规避风险，提高代码质量。")]),s._v(" "),a("blockquote",[a("p",[s._v("以下是从官网的 "),a("code",[s._v("Rules")]),s._v(" 列表中摘取的部分规则，欢迎大家补充，共同学习。")])]),s._v(" "),a("h2",{attrs:{id:"possible-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#possible-errors"}},[s._v("#")]),s._v(" Possible Errors")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("getter-return")])]),s._v("：强制在 "),a("code",[s._v("getter")]),s._v(" 属性中出现一个 "),a("code",[s._v("return")]),s._v(" 语句。每个 "),a("code",[s._v("getter")]),s._v(" 都期望有返回值。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-compare-neg-zero")])]),s._v("：禁止与 "),a("code",[s._v("-0")]),s._v(" 进行比较。像 "),a("code",[s._v("x === -0")]),s._v(" 的代码对于 "),a("code",[s._v("+0")]),s._v(" 和 "),a("code",[s._v("-0")]),s._v(" 都有效。你可以使用 "),a("code",[s._v("Object.is(x, -0)")]),s._v("。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// doSomething()...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// doSomething()...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// doSomething()...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-cond-assign")])]),s._v(": 禁止在条件语句中出现赋值操作符。在条件语句中，很容易将一个比较运算符（像 "),a("code",[s._v("==")]),s._v("）错写成赋值运算符（如 "),a("code",[s._v("=")]),s._v("）。在条件语句中，使用赋值操作符是有效的。然而，很难判断某个特定的赋值是否是有意为之。该规则有两个可选值：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("except-parens")]),s._v("：默认值，允许条件语句中出现赋值操作符，前提是它们被圆括号括起来。")]),s._v(" "),a("li",[a("code",[s._v("always")]),s._v(": 禁止条件语句中出现赋值语句。")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-console")])]),s._v("：禁止调用 "),a("code",[s._v("console")]),s._v(" 对象的方法。"),a("code",[s._v("console")]),s._v(" 这样的消息被认为是用于调试的，生产环境中不应该有关于"),a("code",[s._v("console")]),s._v(" 的语句。同时，被"),a("code",[s._v("console.log")]),s._v("的变量是不会被垃圾回收的，一旦多起来会导致内存泄漏。该规则有可配置选项"),a("code",[s._v("allow")]),s._v("，它的值是个字符串数组，包含允许使用的"),a("code",[s._v("console")]),s._v("对象的方法。例如: "),a("code",[s._v('allow: ["warn", "error"]')]),s._v("允许使用"),a("code",[s._v("console")]),s._v("对象上的"),a("code",[s._v("warn")]),s._v("，"),a("code",[s._v("error")]),s._v("方法。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-constant-condition")])]),s._v("：禁止在条件中使用常量表达式。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-dupe-args")])]),s._v(": 禁止在 "),a("code",[s._v("function")]),s._v(" 定义中出现重复的参数。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-dupe-keys")])]),s._v(": 禁止在对象字面量中出现重复的键。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-duplicate-case")])]),s._v(": 禁止在 switch 语句中的 case 子句中出现重复的测试表达式。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-empty")])]),s._v(": 禁止空语句块出现，该规则会忽略包含一个注释的语句块。例如，在 "),a("code",[s._v("try")]),s._v(" 语句中，一个空的 "),a("code",[s._v("catch")]),s._v(" 或 "),a("code",[s._v("finally")]),s._v(" 语句块意味着程序应该继续执行，无论是否出现错误。该规则有个可配置的选项 "),a("code",[s._v("allowEmptyCatch: true")]),s._v(" 允许出现空的 "),a("code",[s._v("catch")]),s._v(" 子句。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-ex-assign")])]),s._v("：禁止对 "),a("code",[s._v("catch")]),s._v(" 子句中的异常重新赋值。如果意外地（或故意地）给异常参数赋值，是不可能引用那个位置的错误的。由于没有 "),a("code",[s._v("arguments")]),s._v(" 对象提供额外的方式访问这个异常，对它进行赋值绝对是毁灭性的。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-func-assign")])]),s._v("：禁止对 function 声明重新赋值。例如：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfoo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("code",[s._v("JavaScript")]),s._v(" 函数有两种形式：函数声明 "),a("code",[s._v("function foo() { ... }")]),s._v(" 或者函数表达式 "),a("code",[s._v("var foo = function() { ... }")]),s._v(" 。虽然 "),a("code",[s._v("JavaScript")]),s._v(" 解释器可以容忍对函数声明进行覆盖或重新赋值，但通常这是个错误，应该避免。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-inner-declarations")])]),s._v("：禁止在嵌套的块中出现变量声明或 "),a("code",[s._v("function")]),s._v(" 声明。可选值("),a("code",[s._v("string")]),s._v(")："),a("code",[s._v("functions(默认)")]),s._v("，"),a("code",[s._v("both（禁止 function 和 var 声明出现在嵌套的语句块中）")]),s._v("。这只适用于函数声明，命名的或匿名的函数表达式是可以出现在任何允许的地方。在 "),a("code",[s._v("ES6")]),s._v(" 之前的 "),a("code",[s._v("JavaScript")]),s._v(" 中，函数声明只能在程序或另一个函数体的顶层。由于变量声明提升，把声明放在程序或函数体的顶部会使代码更清晰，在任何地方随意声明变量的做法通常是不可取的。因为在"),a("code",[s._v("ES6")]),s._v("中的 "),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(" 不会被提升，因此它们不受此规则影响。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-irregular-whitespace")])]),s._v("：禁止在字符串和注释之外不规则的空白。无效的或不规则的空白会导致 "),a("code",[s._v("ECMAScript 5")]),s._v(" 解析问题，也会使代码难以调试（类似于混合 "),a("code",[s._v("tab")]),s._v(" 和空格的情况）。 "),a("a",{attrs:{href:"https://eslint.org/docs/rules/no-irregular-whitespace",target:"_blank",rel:"noopener noreferrer"}},[s._v("引起的问题以及禁止出现的不正常字符"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-obj-calls")])]),s._v("：禁止把全局对象作为函数调用，如 "),a("code",[s._v("Math")]),s._v("、"),a("code",[s._v("JSON")]),s._v(" 和 "),a("code",[s._v("Reflect")]),s._v("等。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-sparse-arrays")])]),s._v("：禁用稀疏数组，也就是逗号之前没有任何元素的数组。该规则不适用于紧随最后一个元素的拖尾逗号的情况。例如：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" colors "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blue"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" colors "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-unexpected-multiline")])]),s._v("：禁止使用令人困惑的多行表达式。在 "),a("code",[s._v("JavaScript")]),s._v(" 中，分号通常是可选的，因为会自动插入分号（"),a("code",[s._v("ASI")]),s._v(")。换行不结束语句，书写错误遗漏了分号，这些异常会导致两个不相干的连续的行被解释为一个表达式。特别是对于一个没有分号的代码风格，读者可能会忽略这些错误。尽管语法上是正确的，代码执行时可能会抛出异常。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-unreachable")])]),s._v("：禁止在 "),a("code",[s._v("return")]),s._v("、"),a("code",[s._v("throw")]),s._v("、"),a("code",[s._v("continue")]),s._v(" 和 "),a("code",[s._v("break")]),s._v(" 语句后出现不可达代码。因为这些语句无条件地退出代码块，其之后的任何语句都不会被执行。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("use-isnan")])]),s._v("：禁止与 "),a("code",[s._v("NaN")]),s._v(" 的比较，要求调用 "),a("code",[s._v("isNaN()")]),s._v("检查 "),a("code",[s._v("NaN")]),s._v("。在 "),a("code",[s._v("JavaScript")]),s._v(" 中，"),a("code",[s._v("NaN")]),s._v(" 是 "),a("code",[s._v("Number")]),s._v(" 类型的一个特殊值。它被用来表示非数值("),a("code",[s._v("Not A Number")]),s._v(")，这里的数值是指在 "),a("code",[s._v("IEEE")]),s._v(" 浮点数算术标准中定义的双精度64位格式的值。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "number"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("因为在 "),a("code",[s._v("JavaScript")]),s._v(" 中 "),a("code",[s._v("NaN")]),s._v(" 独特之处在于它不等于任何值，包括它本身，与 "),a("code",[s._v("NaN")]),s._v(" 进行比较的结果也令人困惑：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("因此，使用 "),a("code",[s._v("Number.isNaN()")]),s._v(" 或 全局的 "),a("code",[s._v("isNaN()")]),s._v(" 函数来测试一个值是否是 "),a("code",[s._v("NaN")]),s._v("。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("valid-typeof")])]),s._v("：强制 "),a("code",[s._v("typeof")]),s._v(" 表达式与有效的字符串进行比较。对于绝大多数用例而言，"),a("code",[s._v("typeof")]),s._v(" 操作符的结果是以下字符串字面量中的一个："),a("code",[s._v('"undefined"')]),s._v("、"),a("code",[s._v('"object"')]),s._v("、"),a("code",[s._v('"boolean"')]),s._v("、"),a("code",[s._v('"number"')]),s._v("、"),a("code",[s._v('"string"')]),s._v("、"),a("code",[s._v('"function"')]),s._v(" 和 "),a("code",[s._v('"symbol"')]),s._v("。把 "),a("code",[s._v("typeof")]),s._v(" 操作符的结果与其它字符串进行比较，通常是个书写错误。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strnig"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"undefimed"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nunber"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"function"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"undefined"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" baz\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" qux\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"best-practices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#best-practices"}},[s._v("#")]),s._v(" Best Practices")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("accessor-pairs")])]),s._v("：强制"),a("code",[s._v("getter/setter")]),s._v("成对出现在对象中。该规则强制一种编码风格：对于每个属性，如果定义了"),a("code",[s._v("setter")]),s._v("，也必须定义相应的 "),a("code",[s._v("getter")]),s._v("。没有 "),a("code",[s._v("getter")]),s._v(" ，你不能读取这个属性，该属性也就不会被用到。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("array-callback-return")])]),s._v("：强制数组某些方法的回调函数中有 "),a("code",[s._v("return")]),s._v(" 语句。 "),a("code",[s._v("Array")]),s._v(" 有一些方法用来过滤、映射和折叠。如果你忘记了在它们的回调函数中写 "),a("code",[s._v("return")]),s._v(" 语句，这种情况可能是个错误。需要 "),a("code",[s._v("return")]),s._v(" 语句的方法有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Array.from")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.every")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.filter")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.find")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.findIndex")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.map")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.reduce")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.reduceRight")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.some")])]),s._v(" "),a("li",[a("code",[s._v("Array.prototype.sort")])])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("default-case")])]),s._v("：要求 "),a("code",[s._v("wwitch")]),s._v(" 语句中有 "),a("code",[s._v("default")]),s._v(" 分支，即使默认分支中没有任何代码。开发人员可能忘记定义默认分支而导致程序发生错误，所以明确规定定义默认分支是很好的选择。或者也可以在最后一个 "),a("code",[s._v("case")]),s._v(" 分支下，使用 "),a("code",[s._v("// no default")]),s._v(" 来表明此处不需要 "),a("code",[s._v("default")]),s._v(" 分支。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("eqeqeq")])]),s._v("：要求使用 "),a("code",[s._v("===")]),s._v(" 和 "),a("code",[s._v("!==")]),s._v(" 代替 "),a("code",[s._v("==")]),s._v(" 和 "),a("code",[s._v("!=")]),s._v(" 操作符。原因是 "),a("code",[s._v("==")]),s._v(" 和 "),a("code",[s._v("!=")]),s._v(" 在比较时会作强制转型，有时会产生副作用甚至异常。 有两个可选值：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("always")]),s._v(" : 强制在任何情况下都使用 "),a("code",[s._v("===")]),s._v(" 和 "),a("code",[s._v("!==")])]),s._v(" "),a("li",[a("code",[s._v("smart")]),s._v("： 除了以下这些情况外，强制使用 "),a("code",[s._v("===")]),s._v(" 和 "),a("code",[s._v("!==")]),s._v(" ：\n"),a("ul",[a("li",[s._v("比较两个字面量的值")]),s._v(" "),a("li",[s._v("比较 "),a("code",[s._v("typeof")]),s._v(" 的值")]),s._v(" "),a("li",[s._v("与 "),a("code",[s._v("null")]),s._v(" 进行比较")])])])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-alert")])]),s._v("：禁用 "),a("code",[s._v("alert")]),s._v("、"),a("code",[s._v("confirm")]),s._v(" 和 "),a("code",[s._v("prompt")]),s._v("。"),a("code",[s._v("JavaScript")]),s._v(" 的 "),a("code",[s._v("alert")]),s._v("、"),a("code",[s._v("confirm")]),s._v(" 和 "),a("code",[s._v("prompt")]),s._v(" 被广泛认为是突兀的 UI 元素，应该被一个更合适的自定义的 UI 界面代替。此外, "),a("code",[s._v("alert")]),s._v(" 经常被用于调试代码，部署到生产环境之前应该删除。因此，当遇到 "),a("code",[s._v("alert")]),s._v("、"),a("code",[s._v("prompt")]),s._v(" 和 "),a("code",[s._v("confirm")]),s._v(" 时，该规则将发出警告。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-caller")])]),s._v("：禁用 "),a("code",[s._v("arguments.caller")]),s._v(" 或 "),a("code",[s._v("arguments.callee")]),s._v("。它们的使用使一些代码优化变得不可能。在 "),a("code",[s._v("JavaScript")]),s._v(" 的新版本中它们已被弃用，同时在 "),a("code",[s._v("ECMAScript 5")]),s._v(" 的严格模式下，它们也是被禁用的。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-case-declarations")])]),s._v("：禁止词法声明 ("),a("code",[s._v("let")]),s._v("、"),a("code",[s._v("const")]),s._v("、"),a("code",[s._v("function")]),s._v(" 和 "),a("code",[s._v("class")]),s._v(") 出现在 "),a("code",[s._v("case")]),s._v(" 或 "),a("code",[s._v("default")]),s._v(" 子句中。词法声明在整个 "),a("code",[s._v("switch")]),s._v(" 语句块中是可见的，但是它只有在运行到它定义的 "),a("code",[s._v("case")]),s._v(" 语句时，才会进行初始化操作。\n为了保证词法声明语句只在当前 "),a("code",[s._v("case")]),s._v(" 语句中有效，将你子句包裹在块中。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下面的 case 子句使用括号包裹在了块中")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为函数作用域提升，使用 var 声明而不使用括号包裹是合法的。")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-else-return")])]),s._v("：禁止 "),a("code",[s._v("if")]),s._v(" 语句中 "),a("code",[s._v("return")]),s._v(" 语句之后有 "),a("code",[s._v("else")]),s._v(" 块。如果 "),a("code",[s._v("if")]),s._v(" 块中包含了一个 "),a("code",[s._v("return")]),s._v(" 语句，"),a("code",[s._v("else")]),s._v(" 块就成了多余的了。可以将其内容移至块外。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-empty-function")])]),s._v("：禁止出现空函数。空函数能降低代码的可读性，如果一个函数包含了一条注释，它将不会被认为有问题。该规则有一个选项，配置所允许的空函数列表，默认为空数组。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-empty-pattern")])]),s._v("：禁止使用空解构模式。当使用解构赋值时，可能创建了一个不起作用的模式。把空的花括号放在嵌入的对象的解构模式右边时，就会产生这种情况。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// incorrect")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// correct")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-eq-null")])]),s._v("：禁止使用 "),a("code",[s._v("==")]),s._v(" 和 "),a("code",[s._v("!=")]),s._v(" 操作符与 "),a("code",[s._v("null")]),s._v(" 进行比较。当你进行比较时可能得意想不到的的结果，因为 "),a("code",[s._v("null")]),s._v(" 和 "),a("code",[s._v("null")]),s._v(" 与 "),a("code",[s._v("undefined")]),s._v(" 的比较结果都为 "),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-eval")])]),s._v("：禁用 "),a("code",[s._v("eval()")]),s._v("。"),a("code",[s._v("JavaScript")]),s._v(" 中的 "),a("code",[s._v("eval()")]),s._v(" 函数是有潜在危险的，而且经常被误用。"),a("code",[s._v("eval()")]),s._v(" 在大多数情况下可以被更好的解决问题的方法代替。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-global-assign")])]),s._v("：禁止对原生对象或只读的全局对象进行赋值。"),a("code",[s._v("JavaScript")]),s._v(" 环境包含很多内置的全局变量，比如浏览器环境的 "),a("code",[s._v("window")]),s._v(" 和 "),a("code",[s._v("Node.js")]),s._v(" 中的 "),a("code",[s._v("process")]),s._v("。在几乎所有情况下，你都不应该给全局变量赋值，因为这样做可能会到导致无法访问到重要的功能。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-implicit-globals")])]),s._v("：禁止在全局范围下使用 "),a("code",[s._v("var")]),s._v(" 和命名的 "),a("code",[s._v("function")]),s._v(" 声明。因为这样，会作为 "),a("code",[s._v("window")]),s._v(" 对象的一个属性或方法存在。全局变量应该显式地赋值给 "),a("code",[s._v("window")]),s._v(" 或 "),a("code",[s._v("self")]),s._v("。否则，局部变量应该包裹在 "),a("code",[s._v("IIFE")]),s._v(" 中。该规则不适用于 "),a("code",[s._v("ES")]),s._v(" 和 "),a("code",[s._v("CommonJS")]),s._v(" 的模块，因为它们有自己的模块作用域。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-invalid-this")])]),s._v("：禁止 "),a("code",[s._v("this")]),s._v(" 关键字在类或类对象之外出现。该规则 "),a("strong",[s._v("只")]),s._v(" 在严格模式下生效，在严格模式下，类或者类对象之外的 "),a("code",[s._v("this")]),s._v(" 关键字可能是 "),a("code",[s._v("undefined")]),s._v(" 并且引发 "),a("code",[s._v("TypeError")]),s._v("。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-iterator")])]),s._v("：禁用 "),a("code",[s._v("__iterator__")]),s._v(" 属性。这个属性现在废弃了，所以不应再使用它。现在，应该使用 "),a("code",[s._v("ES6")]),s._v(" 迭代器和生成器。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-lone-blocks")])]),s._v("：禁用不必要的嵌套块。在 "),a("code",[s._v("ES6")]),s._v(" 之前，由花括号分隔开的独立代码块不会创建新的作用域，也就不起什么作用，代码块是多余的。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该括号对 foo 不起任何作用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在 "),a("code",[s._v("ES6")]),s._v(" 中，如果出现一个块级绑定 ("),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(")，类声明或函数声明（在严格模式下），代码块就会创建一个新的作用域。在这些情况下，代码块不会被认为是多余的。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-multi-spaces")])]),s._v("：禁止在逻辑表达式、条件表达式、声明、数组元素、对象属性、序列和函数参数周围使用多个空格。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-new")])]),s._v("：禁止使用 "),a("code",[s._v("new")]),s._v(" 关键字调用构造函数但却不将结果赋值给一个变量。比如 "),a("code",[s._v("new Thing()")]),s._v(" 创建的对象会被销毁因为它的引用没有被存储在任何地方。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-new-func")])]),s._v("：禁止对 "),a("code",[s._v("Function")]),s._v(" 对象使用 "),a("code",[s._v("new")]),s._v(" 操作符。"),a("code",[s._v("JavaScript")]),s._v(" 中可以使用 "),a("code",[s._v("Function")]),s._v(" 构造函数创建一个函数，如 "),a("code",[s._v('var x = new Function("a", "b", "return a + b");')]),s._v("，把一个字符串传给 "),a("code",[s._v("Function")]),s._v(" 构造函数，你需要引擎解析该字符串，这一点同调用 "),a("code",[s._v("eval")]),s._v(" 函数一样，应该避免这样使用。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-new-wrappers")])]),s._v("：禁止对 "),a("code",[s._v("String")]),s._v("，"),a("code",[s._v("Number")]),s._v(" 和 "),a("code",[s._v("Boolean")]),s._v(" 使用 "),a("code",[s._v("new")]),s._v(" 操作符。在 "),a("code",[s._v("JavaScript")]),s._v(" 中有3种原始类型包装对象：字符串，数字和布尔值。它们所代表的构造器分别为 "),a("code",[s._v("String")]),s._v("、"),a("code",[s._v("Number")]),s._v(" 和 "),a("code",[s._v("Boolean")]),s._v("。\n下面的例子使用 "),a("code",[s._v("new")]),s._v(" 操作符后使用 "),a("code",[s._v("typeof")]),s._v(" 将返回 "),a("code",[s._v('"object"')]),s._v("，而不是 "),a("code",[s._v('"string"')]),s._v(", "),a("code",[s._v('"number"')]),s._v(" 和 "),a("code",[s._v("“boolean”")]),s._v("，这意味着可能与预期不符。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" stringObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" numberObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" booleanObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("而且，每个对象的判断都是真，这意味着每个 "),a("code",[s._v("Boolean")]),s._v(" 的实例都会返回 "),a("code",[s._v("true")]),s._v("，即使它们实际的值是 "),a("code",[s._v("false")]),s._v("。所以，应该避免使用 "),a("code",[s._v("new")]),s._v(" 来使用原始包装类型。一般情况下，下面这样使用即可。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bol "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("no-param-reassign")])]),s._v("：禁止对 "),a("code",[s._v("function")]),s._v(" 的参数进行重新赋值。比如："),a("code",[s._v("function f(arg) { arg = 1; }")]),s._v(" 或 "),a("code",[s._v("function f(obj) { obj.num = 1; }")]),s._v("。对函数参数中的变量进行赋值可能会误导读者，导致混乱，也会改变 "),a("code",[s._v("arguments")]),s._v(" 对象。如果参数是引用类型，比如对象，修改对象的属性会影响到传入函数的那个原始对象。如果需要修改可以复制一份数据再改。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-proto")])]),s._v("：禁用 "),a("code",[s._v("__proto__")]),s._v(" 属性。"),a("code",[s._v("__proto__")]),s._v(" 属性在 "),a("code",[s._v("ECMAScript 3.1")]),s._v(" 中已经被弃用，并且不应该在代码中使用。应该使用 "),a("code",[s._v("getPrototypeOf")]),s._v(" 方法替代 "),a("code",[s._v("__proto__")]),s._v("。"),a("code",[s._v("getPrototypeOf")]),s._v("是获取原型的首选方法。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-redeclare")])]),s._v("：禁止多次声明同一变量。这会使变量实际声明和定义的位置混乱不堪。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-return-assign")])]),s._v("：禁止在 "),a("code",[s._v("return")]),s._v(" 语句中使用赋值语句。因为很难断定 "),a("code",[s._v("return")]),s._v(" 语句的意图。可能是赋值，但赋值的意图也可能不明确，也可能是比较。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-self-assign")])]),s._v("：禁止自身赋值。自身赋值不起任何作用。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-self-compare")])]),s._v("：禁止自身比较。几乎没有场景需要你比较变量本身。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-unmodified-loop-condition")])]),s._v("：禁用一成不变的循环条件。循环条件中的变量在循环中是要经常改变的。如果不是这样，那么可能是个错误。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-useless-call")])]),s._v("：禁止不必要的 "),a("code",[s._v(".call()")]),s._v(" 和 "),a("code",[s._v(".apply()")]),s._v("。例如下面的代码与 "),a("code",[s._v("foo(1, 2, 3)")]),s._v("效果相同：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("函数的调用可以写成 "),a("code",[s._v("Function.prototype.call()")]),s._v(" 和 "),a("code",[s._v("Function.prototype.apply()")]),s._v("，但是 "),a("code",[s._v("Function.prototype.call()")]),s._v(" 和 "),a("code",[s._v("Function.prototype.apply()")]),s._v(" 比正常的函数调用效率低。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-useless-concat")])]),s._v("：禁止不必要的字符串字面量或模板字面量的连接。把两个字符拼接在一起是没有必要的，比如：\n"),a("code",[s._v('var foo = "a" + "b";')]),s._v(" 直接写作 "),a("code",[s._v('var foo = "ab";')]),s._v(" 即可。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-useless-escape")])]),s._v("：禁用不必要的转义字符。对字符串、模板字面量和正则表达式中的常规字符进行转义，不会对结果产生任何影响，但它是多余的。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不必要使用转义符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\\'"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\#"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\e"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\"')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\"')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\"')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\\#{foo}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\!/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\@/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要使用转义符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\x12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u00a9"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\371"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xs\\u2111"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\\`")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\\${")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("$\\{")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\\\/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\t/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\w\\$\\*\\^\\./")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("prefer-promise-reject-errors")])]),s._v("：要求使用 "),a("code",[s._v("Error")]),s._v(" 对象作为 "),a("code",[s._v("Promise")]),s._v(" 拒绝的原因。"),a("code",[s._v("Error")]),s._v(" 对象会自动存储堆栈跟踪，在调试时，通过它可以用来确定错误是从哪里来的。如果 "),a("code",[s._v("Promise")]),s._v(" 使用了非 "),a("code",[s._v("Error")]),s._v(" 的值作为拒绝原因，那么就很难确定 "),a("code",[s._v("reject")]),s._v(" 在哪里产生。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("require-await")])]),s._v("：禁止使用不带 "),a("code",[s._v("await")]),s._v(" 表达式的 "),a("code",[s._v("async")]),s._v(" 函数。"),a("code",[s._v("async")]),s._v(" 函数不包含 "),a("code",[s._v("await")]),s._v(" 函数可能不是重构想要的结果。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("vars-on-top")])]),s._v("：要求所有的 "),a("code",[s._v("var")]),s._v(" 声明出现在它们所在的作用域顶部。默认的，"),a("code",[s._v("JavaScript")]),s._v(' 的解析器会隐式的将变量的声明移到它们所在作用域的顶部（"变量提升"）。这个规则迫使程序员通过手动移动变量声明到其作用域的顶部来实现这个行为，有助于提高可维护性。')]),s._v(" "),a("p",[a("strong",[a("code",[s._v("wrap-iife")])]),s._v("：要求 "),a("code",[s._v("IIFE")]),s._v(" 使用括号括起来。你可以立即调用函数表达式，而不是函数声明。创建一个立即执行函数 ("),a("code",[s._v("IIFE")]),s._v(") 的一个通用技术是用括号包裹一个函数声明。括号内的函数被解析为一个表达式，而不是一个声明。")]),s._v(" "),a("h2",{attrs:{id:"variable-declarations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-declarations"}},[s._v("#")]),s._v(" Variable Declarations")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-delete-var")])]),s._v("：禁止删除变量。"),a("code",[s._v("delete")]),s._v(" 的目的是删除对象的属性。使用 "),a("code",[s._v("delete")]),s._v(" 操作删除一个变量可能会导致意外情况发生。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-label-var")])]),s._v("：不允许标签与变量同名。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-shadow")])]),s._v("：禁止变量声明与外层作用域的变量同名。例：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("code",[s._v("b()")]),s._v(" 作用域中的 "),a("code",[s._v("a")]),s._v(" 覆盖了全局环境中的 "),a("code",[s._v("a")]),s._v("。这会混淆读者并且在 "),a("code",[s._v("b")]),s._v(" 中不能获取全局变量。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-shadow-restricted-names")])]),s._v("：禁止重定义遮蔽关键字。全局对象的属性值 ("),a("code",[s._v("NaN")]),s._v("、"),a("code",[s._v("Infinity")]),s._v("、"),a("code",[s._v("undefined")]),s._v(")和严格模式下被限定的标识符 "),a("code",[s._v("eval")]),s._v("、"),a("code",[s._v("arguments")]),s._v(" 也被认为是关键字。重定义关键字会产生意想不到的后果且易迷惑其他读者。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-undef-init")])]),s._v("：禁止将变量初始化为 "),a("code",[s._v("undefined")]),s._v("。在 "),a("code",[s._v("JavaScript")]),s._v(" 中，声明一个变量但未初始化，变量会自动获得 "),a("code",[s._v("undefined")]),s._v(" 作为初始值，因此，初始化变量值为 "),a("code",[s._v("undefined")]),s._v(" 是多余的。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-unused-vars")])]),s._v("：禁止出现未使用过的变量。已声明的变量在代码里未被使用过，就像是由于不完整的重构而导致的遗漏错误。这样的变量增加了代码量，并且混淆读者。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-use-before-define")])]),s._v("：禁止在变量定义之前使用它们。在 "),a("code",[s._v("ES6")]),s._v(" 标准之前的 "),a("code",[s._v("JavaScript")]),s._v(' 中，某个作用域中变量和函数的声明会被提前到作用域顶部（"变量提升"），所以可能存在这种情况：此变量在声明前被使用。这会扰乱读者。在 '),a("code",[s._v("ES6")]),s._v(" 中，块级绑定 ("),a("code",[s._v("let")]),s._v(" 和 "),a("code",[s._v("const")]),s._v(') 引入"暂时性死区"，当企图使用未声明的变量会抛出 '),a("code",[s._v("ReferenceError")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"node-js-and-commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-and-commonjs"}},[s._v("#")]),s._v(" Node.js and CommonJS")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("global-require")])]),s._v("：要求 "),a("code",[s._v("require()")]),s._v(" 出现在顶层模块作用域中。在 "),a("code",[s._v("Node.js")]),s._v(" 中，使用 "),a("code",[s._v("require()")]),s._v(" 函数引入依赖的模块，它在模块顶层被调用，这样更容易识别依赖关系。当它们在深层次嵌套在函数和其它语句时，就很难识别依赖。因为 "),a("code",[s._v("require()")]),s._v(" 是同步加载的，在其它地方使用时，会导致性能问题。此外，"),a("code",[s._v("ES6")]),s._v(" 模块要求 "),a("code",[s._v("import")]),s._v(" 和 "),a("code",[s._v("export")]),s._v(" 语句只能放在模块顶部。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("handle-callback-err")])]),s._v("：要求回调函数中有容错处理。在 "),a("code",[s._v("Node.js")]),s._v(" 中，最普遍的处理异步行为是回调模式。这个模式期望一个 "),a("code",[s._v("Error")]),s._v(" 对象或 "),a("code",[s._v("null")]),s._v(" 作为回调的第一个参数。如果忘记处理这些错误会导致你的应用程序出现一些非常奇怪的行为。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-buffer-constructor")])]),s._v("：禁用 "),a("code",[s._v("Buffer()")]),s._v(" 构造函数。在 "),a("code",[s._v("Node.js")]),s._v(" 中，"),a("code",[s._v("Buffer")]),s._v(" 构造函数的行为取决于其参数的类型。将用户输入的参数传递给 "),a("code",[s._v("Buffer()")]),s._v("，而不验证其类型，会导致安全漏洞，比如远程内存泄漏和拒绝服务。因此，"),a("code",[s._v("Buffer")]),s._v(" 构造函数已经被弃用，不应该再使用。使用 "),a("code",[s._v("Buffer.from")]),s._v("、"),a("code",[s._v("Buffer.alloc")]),s._v(" 和 "),a("code",[s._v("Buffer.allocUnsafe")]),s._v(" 生成器方法代替。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-new-require")])]),s._v("：禁止调用 "),a("code",[s._v("require")]),s._v(" 时使用 "),a("code",[s._v("new")]),s._v(" 操作符。"),a("code",[s._v("require")]),s._v(" 方法被用来引入不同文件中模块。某些模块可能返回一个构造函数，会出现 "),a("code",[s._v("var app = new (require(moduleName));")]),s._v(" 的情况，这样可能会引起潜在的混乱，应该避免这样的情况，分成多行写会使你的代码更清晰。")]),s._v(" "),a("h2",{attrs:{id:"stylistic-issues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stylistic-issues"}},[s._v("#")]),s._v(" Stylistic Issues")]),s._v(" "),a("p",[s._v("关于空格，换行，声明，标点符号等风格规则，非常主观，依据个人或团队编码风格自定义，这里不作介绍。")]),s._v(" "),a("h2",{attrs:{id:"ecmascript-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-6"}},[s._v("#")]),s._v(" ECMAScript 6")]),s._v(" "),a("blockquote",[a("p",[s._v("这些规则只与 "),a("code",[s._v("ES6")]),s._v(" 有关，即通常所说的 "),a("code",[s._v("ES2015")])])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("arrow-body-style")])]),s._v("：要求箭头函数体使用大括号。为了规避箭头函数语法可能带来的错误，当函数体只有一行的时候，若不加大括号，会默认把这行代码的返回结果给隐式 "),a("code",[s._v("return")]),s._v("。当函数体有多行的时候，必须使用大括号，并且需要自己写 "),a("code",[s._v("return")]),s._v(" 语句。可选值有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("always")]),s._v("--强制始终用大括号")]),s._v(" "),a("li",[a("code",[s._v("as-needed")]),s._v("--当大括号是可以省略的，强制不使用它们")]),s._v(" "),a("li",[a("code",[s._v("never")]),s._v("--禁止在函数体周围出现大括号")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("arrow-parens")])]),s._v("：要求箭头函数的参数使用圆括号。箭头函数体只有一个参数时，可以省略圆括号。其它任何情况，参数都应被圆括号括起来。该规则强制箭头函数中圆括号的使用的一致性。可选值有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("always")]),s._v("--要求在所有情况下使用圆括号将参数括起来。")]),s._v(" "),a("li",[a("code",[s._v("as-needed")]),s._v("--当只有一个参数时允许省略圆括号。")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("constructor-super")])]),s._v("：要求在构造函数中有 "),a("code",[s._v("super()")]),s._v(" 的调用。派生类中的构造函数必须调用 "),a("code",[s._v("super()")]),s._v("。非派生类的构造函数不能调用 "),a("code",[s._v("super()")]),s._v(", 否则 "),a("code",[s._v("JavaScript")]),s._v(" 引擎将引发一个运行时错误。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-class-assign")])]),s._v("：禁止修改类声明的变量。大多数情况下，"),a("code",[s._v("class A {}; A = 0;")]),s._v("这样的修改是个错误。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-const-assign")])]),s._v("：禁止修改 "),a("code",[s._v("const")]),s._v(" 声明的变量。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-dupe-class-members")])]),s._v("：禁止类成员中出现重复的名称。如果类成员中有同名的声明，最后一个声明将会默默地覆盖其它声明，它可能导致意外的行为。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-duplicate-imports")])]),s._v("：禁止重复模块导入。为每个模块使用单一的 "),a("code",[s._v("import")]),s._v(" 语句会是代码更加清新，因为你会看到从该模块导入的所有内容都在同一行。"),a("code",[s._v("import { A } from 'module'; import { B } from 'module';")]),s._v(" 应该合并为 "),a("code",[s._v("import { A, B } from 'module';")]),s._v(" 会使导入列表更加简洁。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-new-symbol")])]),s._v("：禁止 "),a("code",[s._v("Symbol")]),s._v(" 和 "),a("code",[s._v("new")]),s._v(" 一起使用。"),a("code",[s._v("Symbol")]),s._v(" 应该作为函数调用。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-this-before-super")])]),s._v("：禁止在构造函数中，在调用 "),a("code",[s._v("super()")]),s._v(" 之前使用 "),a("code",[s._v("this")]),s._v(" 或 "),a("code",[s._v("super")]),s._v("。在派生类的构造函数中，如果在调用 "),a("code",[s._v("super()")]),s._v(" 之前使用 "),a("code",[s._v("this")]),s._v(" 或 "),a("code",[s._v("super")]),s._v("，它将会引发一个引用错误。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-useless-rename")])]),s._v("：禁止在 "),a("code",[s._v("import")]),s._v(" 和 "),a("code",[s._v("export")]),s._v(" 和解构赋值时将引用重命名为相同的名字。"),a("code",[s._v("ES2015")]),s._v(" 允许在 "),a("code",[s._v("import")]),s._v(" ，"),a("code",[s._v("export")]),s._v(" 和解构赋值时对引用进行重命名。引用有可能被重命名成相同的名字。"),a("code",[s._v('import { foo as foo } from "bar";')]),s._v(" 这和没有重命名是等价的，因此这种操作完全冗余。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("no-var")])]),s._v("：要求使用 "),a("code",[s._v("let")]),s._v(" 或 "),a("code",[s._v("const")]),s._v(" 而不是 "),a("code",[s._v("var")]),s._v("。块级作用域在很多其他编程语言中很普遍，能帮助程序员避免错误。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("object-shorthand")])]),s._v("：要求或禁止对象字面量中方法和属性使用简写语法。"),a("code",[s._v("ECMAScript 6")]),s._v(" 提供了简写的形式去定义对象中的方法和属性。你可以配置该规则来要求或禁止简写。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    z"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等效于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" z "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//等效于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[a("code",[s._v("prefer-const")])]),s._v("：要求使用 "),a("code",[s._v("const")]),s._v(" 声明那些声明后不再被修改的变量。如果一个变量不会被重新赋值，最好使用 "),a("code",[s._v("const")]),s._v(" 进行声明。从而减少认知负荷，提高可维护性。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("prefer-rest-params")])]),s._v("：要求使用剩余参数而不是 "),a("code",[s._v("arguments")]),s._v("。剩余参数得到的是真正的数组，而 "),a("code",[s._v("arguments")]),s._v("是类数组，没有 "),a("code",[s._v("Array.prototype")]),s._v(" 方法，有时候还需要再转化一步。剩余参数的语义更明确，即声明的形参之外的实参会被归进数组。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("prefer-spread")])]),s._v("：要求使用扩展运算符而非 "),a("code",[s._v(".apply()")]),s._v("。在 "),a("code",[s._v("ES2015")]),s._v(" 之前，必须使用 "),a("code",[s._v("Function.prototype.apply()")]),s._v(" 调用可变参数函数。如 "),a("code",[s._v("var args = [1, 2, 3, 4]; Math.max.apply(Math, args);")]),s._v("，在 "),a("code",[s._v("ES2015")]),s._v(" 中，可以使用扩展运算符调用可变参数函数。"),a("code",[s._v("var args = [1, 2, 3, 4]; Math.max(...args);")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("prefer-template")])]),s._v("：要求使用模板字面量而非字符串连接。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("require-yield")])]),s._v("：要求 "),a("code",[s._v("generator")]),s._v(" 函数内有 "),a("code",[s._v("yield")]),s._v("。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("import/no-mutable-exports")])]),s._v("：禁止 "),a("code",[s._v("export")]),s._v(" 暴露可更改的数据。也就是说 "),a("code",[s._v("export")]),s._v(" 出的必须用 "),a("code",[s._v("const")]),s._v(" 定义，如："),a("code",[s._v("const name = 'a'; export default name;")])]),s._v(" "),a("h3",{attrs:{id:"未完待续-欢迎大家补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未完待续-欢迎大家补充"}},[s._v("#")]),s._v(" 未完待续 欢迎大家补充……")])])}),[],!1,null,null,null);t.default=e.exports}}]);